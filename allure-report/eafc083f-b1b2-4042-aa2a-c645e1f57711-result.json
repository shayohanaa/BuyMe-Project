{"name": "test_BuyMe", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=112.0.5615.49)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x010EDCE3]\n\t(No symbol) [0x010839D1]\n\t(No symbol) [0x00F94DA8]\n\t(No symbol) [0x00F976FB]\n\t(No symbol) [0x00F975D0]\n\t(No symbol) [0x00F97850]\n\t(No symbol) [0x00FC16CD]\n\t(No symbol) [0x00FB8B4D]\n\t(No symbol) [0x00FDAECC]\n\t(No symbol) [0x00FB8726]\n\t(No symbol) [0x00FDB224]\n\t(No symbol) [0x00FED57C]\n\t(No symbol) [0x00FDACC6]\n\t(No symbol) [0x00FB6F68]\n\t(No symbol) [0x00FB80CD]\n\tGetHandleVerifier [0x01363832+2506274]\n\tGetHandleVerifier [0x01399794+2727300]\n\tGetHandleVerifier [0x0139E36C+2746716]\n\tGetHandleVerifier [0x01196690+617600]\n\t(No symbol) [0x0108C712]\n\t(No symbol) [0x01091FF8]\n\t(No symbol) [0x010920DB]\n\t(No symbol) [0x0109C63B]\n\tBaseThreadInitThunk [0x756D00F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77227BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77227B8E+238]", "trace": "self = <test_BuyMe.setUp testMethod=test_BuyMe>\n\n    def test_BuyMe(self):\n        # self.homepage.signUp()\n        # self.login.Login()\n>       self.login.fulfillGift()\n\ntest_BuyMe.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nhomepage.py:52: in fulfillGift\n    self.click_element(By.ID, 'ember1053')\nbase_page.py:11: in click_element\n    self.driver.find_element(locator_type, locator_value).click()\n..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\buyme-Vr7eKZgk-py3.11\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\buyme-Vr7eKZgk-py3.11\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:404: in _execute\n    return self._parent.execute(command, params)\n..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\buyme-Vr7eKZgk-py3.11\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001E0E6416F50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is n...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77227BBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77227B8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: chrome=112.0.5615.49)\nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x010EDCE3]\nE       \t(No symbol) [0x010839D1]\nE       \t(No symbol) [0x00F94DA8]\nE       \t(No symbol) [0x00F976FB]\nE       \t(No symbol) [0x00F975D0]\nE       \t(No symbol) [0x00F97850]\nE       \t(No symbol) [0x00FC16CD]\nE       \t(No symbol) [0x00FB8B4D]\nE       \t(No symbol) [0x00FDAECC]\nE       \t(No symbol) [0x00FB8726]\nE       \t(No symbol) [0x00FDB224]\nE       \t(No symbol) [0x00FED57C]\nE       \t(No symbol) [0x00FDACC6]\nE       \t(No symbol) [0x00FB6F68]\nE       \t(No symbol) [0x00FB80CD]\nE       \tGetHandleVerifier [0x01363832+2506274]\nE       \tGetHandleVerifier [0x01399794+2727300]\nE       \tGetHandleVerifier [0x0139E36C+2746716]\nE       \tGetHandleVerifier [0x01196690+617600]\nE       \t(No symbol) [0x0108C712]\nE       \t(No symbol) [0x01091FF8]\nE       \t(No symbol) [0x010920DB]\nE       \t(No symbol) [0x0109C63B]\nE       \tBaseThreadInitThunk [0x756D00F9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77227BBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77227B8E+238]\n\n..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\buyme-Vr7eKZgk-py3.11\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: StaleElementReferenceException"}, "start": 1680839657288, "stop": 1680839667131, "uuid": "879731a7-f22b-4a2e-baa1-78d5dd093864", "historyId": "b1b9135dee3f2732aaf3a9aa1fd591b8", "testCaseId": "480b41072f80834796ea752202681d01", "fullName": "test_BuyMe.setUp#test_BuyMe", "labels": [{"name": "suite", "value": "test_BuyMe"}, {"name": "subSuite", "value": "setUp"}, {"name": "host", "value": "LAPTOP-DTGKGIDP"}, {"name": "thread", "value": "20332-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_BuyMe"}]}